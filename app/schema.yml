openapi: 3.0.3
info:
  title: Transaction Manager API
  version: 3.0.0
  description: Transaction Manager
servers:
- url: https://transaction-task-manager.herokuapp.com/
- url: http://127.0.0.1:8080/

paths:
  /transactions/api/v1/transactions/:
    get:
      operationId: transactions_api_v1_transactions_retrieve
      description: 'Returns all transactions'
      tags:
      - transactions
      parameters:
        - in: query
          name: date_after
          schema:
            type: string
          description: date after the results should be returned
        - in: query
          name: date_before
          schema:
            type: string
          description: date before the results should be returned
        - in: query
          name: method
          schema:
            type: integer
          description: transaction type (0 for income 1 for withdrawal)

      responses:
        '200':
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfTrasactions'

  /users/api/v1/users/:
    post:
      operationId: users_api_v1_users_create
      description: 'Create user'
      tags:
      - users
      requestBody:
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      responses:
        '201':
          description: Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/api/v1/users/{user_id}/:
    get:
      operationId: users_api_v1_users_retrieve
      description: 'Get user wit Id'
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '200':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      operationId: users_api_v1_users_partial_update
      description: 'Update User'
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      requestBody:
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserUpdate"
      tags:
      - users
      responses:
        '200':
          description: Response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: users_api_v1_users_destroy
      description: 'Delete User'
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
  /users/api/v1/users/{user_id}/grouped-transactions/:
    get:
      operationId: users_api_v1_users_grouped_transactions_retrieve
      description: 'Get user transactions grouped by day'
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: date_after
        schema:
          type: string
        description: date after the results should be returned
      - in: query
        name: date_before
        schema:
          type: string
        description: date before the results should be returned
      - in: query
        name: method
        schema:
          type: integer
        description: transaction type (0 for income 1 for withdrawal)
      tags:
      - users
      responses:
        '200':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfTrasactionsGrouped'
  /users/api/v1/users/{user_id}/transactions/:
    get:
      operationId: users_api_v1_users_transactions_retrieve
      description: ''
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      - in: query
        name: date_after
        schema:
          type: string
        description: date after the results should be returned
      - in: query
        name: date_before
        schema:
          type: string
        description: date before the results should be returned
      - in: query
        name: method
        schema:
          type: integer
        description: transaction type (0 for income 1 for withdrawal)
      tags:
      - users
      responses:
        '200':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfTrasactions'

    post:
      operationId: users_api_v1_users_transactions_create
      description: 'Create Transaction for income method=0 for withdrawal=1'
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      requestBody:
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
      tags:
      - users
      responses:
        '201':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
  /users/api/v1/users/{user_id}/transactions/{transaction_id}:
    get:
      operationId: users_api_v1_users_transactions_retrieve_2
      description: ''
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '200':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    patch:
      operationId: users_api_v1_users_transactions_partial_update
      description: 'Update Transaction'
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      requestBody:
        content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transaction"
      tags:
      - users
      responses:
        '200':
          description: No response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
    delete:
      operationId: users_api_v1_users_transactions_destroy
      description: ''
      parameters:
      - in: path
        name: transaction_id
        schema:
          type: integer
        required: true
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - users
      responses:
        '204':
          description: No response body
components:
  schemas:
    Transaction:
      type: object
      required:
      - amount
      - method
      - user
      properties:
        id:
          type: integer
          readOnly: True
        amount:
          type: integer
          example: 500.55
        method:
          type: integer
          example: 1
        user:
          type: integer
          readOnly: True
    User:
      type: object
      required:
      - first_name
      - last_name
      - email
      properties:
        id:
          type: integer
          readOnly: True
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Dohn
        email:
          type: string
          example: JohnDohn@yopmail.com
    ArrayOfTrasactions:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/Transaction'
    ArrayOfTrasactionsGrouped:
      type: object
      properties:
        method:
          type: integer
          example: 1
        day:
          type: string
          format: date
        sum:
          type: number
          example: 100.50

    ArrayOfUsers:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/User'
    UserUpdate:
      type: object
      properties:
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Dohn
